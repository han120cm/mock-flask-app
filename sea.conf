upstream origin_servers {
    least_conn;
    server tugas-akhir-458309.uc.r.appspot.com:443 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream gcs_storage {
    server storage.googleapis.com:443;
    keepalive 32;
}

server {
    server_name cdn.sohryuu.me;

    # Redirect HTTP to HTTPS

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/cdn.sohryuu.me/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/cdn.sohryuu.me/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    proxy_set_header X-CDN-Region "Southeast-Asia";

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript \
               application/xml+rss application/json image/svg+xml;

    # Static assets with long cache
    location ~* ^/static/(images|videos)/ {
        limit_req zone=media_limit burst=20 nodelay;

        # Cache configuration
        proxy_cache media_cache;
        proxy_cache_valid 200 304 30d;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;

        set $gcs_path "/bucket-main-ta$request_uri";
        proxy_pass https://gcs_storage$gcs_path;
        proxy_ssl_server_name on;
        proxy_ssl_verify off;

        proxy_set_header Host storage.googleapis.com;
        proxy_set_header Authorization "";
        proxy_set_header X-CDN-Region "sea";

        # Add CDN identification headers
        add_header X-Cache-Status $upstream_cache_status always;
        add_header X-CDN-Region "sea" always;
        add_header X-Served-From "GCS-via-CDN" always;

        expires 30d;
        add_header Cache-Control "public, max-age=2592000";

        proxy_set_header Range $http_range;
        proxy_set_header If-Range $http_if_range;
    }

    # Fallback to origin app
    location @origin_fallback {
        proxy_pass https://origin_servers;
        proxy_set_header Host tugas-akhir-458309.uc.r.appspot.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # All other requests go to origin app
    location / {
        proxy_cache page_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 5m;

        proxy_pass https://origin_servers;
        proxy_set_header Host tugas-akhir-458309.uc.r.appspot.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-User-Region "sea";
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-CDN-Region "sea" always;
        add_header X-CDN-Server $hostname;

        # sub_filter '{{CDN_REGION}}' 'Southeast-Asia';
        # sub_filter '{{CDN_FLAG}}' 'ðŸ‡®ðŸ‡© ';
        # sub_filter_once off;
    }

    # Health check
    location /health {
        proxy_pass https://origin_servers;
        proxy_set_header Host $host;
        add_header X-CDN-Health "OK" always;
        access_log off;
    }

    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        deny all;
    }
}

server {
    if ($host = cdn.sohryuu.me) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    listen [::]:80;
    server_name cdn.sohryuu.me;
    return 404; # managed by Certbot
}

server {
    server_name 127.0.0.1;
    listen 80;

    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        deny all;
    }
}